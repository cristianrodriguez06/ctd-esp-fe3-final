{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CRISTIANR06\\\\Desktop\\\\FRONT END 3\\\\FINAL-FRONT-END 3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { createContext, useEffect, useMemo, useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"light\",\n  data: []\n};\n\nconst DentistContext = () => {\n  _s();\n\n  const url = \"https://jsonplaceholder.typicode.com/users\";\n  const [resp, setResp] = useState([]);\n\n  try {\n    const getFetch = async () => {\n      const {\n        data\n      } = await axios.get(url);\n      setResp(data);\n    };\n\n    useEffect(() => {\n      getFetch();\n    }, []);\n  } catch (error) {\n    console.log(error);\n  }\n\n  return resp;\n};\n\n_s(DentistContext, \"dPIYCe+b5kyeIpBZcXEeoXbSv48=\");\n\n_c = DentistContext;\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"dark\":\n      return { ...state,\n        theme: \"dark\"\n      };\n\n    case \"light\":\n      return { ...state,\n        theme: \"light\"\n      };\n\n    default:\n      return state;\n  }\n};\nexport const ContextGlobal = /*#__PURE__*/createContext();\nexport const ContextProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  initialState.data = DentistContext(); //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const providerValues = useMemo(() => ({\n    state,\n    dispatch\n  }), [state]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      providerValues\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ContextProvider, \"YRplIqqsTGcfqSOx9r3qaQ/iNac=\");\n\n_c2 = ContextProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DentistContext\");\n$RefreshReg$(_c2, \"ContextProvider\");","map":{"version":3,"names":["React","axios","createContext","useEffect","useMemo","useReducer","useState","initialState","theme","data","DentistContext","url","resp","setResp","getFetch","get","error","console","log","reducer","state","action","type","ContextGlobal","ContextProvider","children","dispatch","providerValues"],"sources":["C:/Users/CRISTIANR06/Desktop/FRONT END 3/FINAL-FRONT-END 3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { createContext, useEffect, useMemo, useReducer, useState } from \"react\";\r\n\r\nexport const initialState = { theme: \"light\", data: [] };\r\n\r\nconst DentistContext = () => {\r\n  const url = \"https://jsonplaceholder.typicode.com/users\";\r\n  const [resp, setResp] = useState([]);\r\n\r\n  try {\r\n    const getFetch = async () => {\r\n      const { data } = await axios.get(url);\r\n      setResp(data);\r\n    };\r\n    useEffect(() => {\r\n      getFetch();\r\n    }, []);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return resp;\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"dark\":\r\n      return { ...state, theme: \"dark\" };\r\n    case \"light\":\r\n      return { ...state, theme: \"light\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const ContextGlobal = createContext();\r\n\r\n\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  initialState.data = DentistContext();\r\n   \r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const providerValues = useMemo(\r\n    () => ({\r\n      state,\r\n      dispatch,\r\n    }),\r\n    [state]\r\n  );\r\n  return (\r\n    <ContextGlobal.Provider value={{ providerValues }}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,OAAnC,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBC,IAAI,EAAE;AAAxB,CAArB;;AAEP,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAMC,GAAG,GAAG,4CAAZ;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;EAEA,IAAI;IACF,MAAMQ,QAAQ,GAAG,YAAY;MAC3B,MAAM;QAAEL;MAAF,IAAW,MAAMR,KAAK,CAACc,GAAN,CAAUJ,GAAV,CAAvB;MACAE,OAAO,CAACJ,IAAD,CAAP;IACD,CAHD;;IAIAN,SAAS,CAAC,MAAM;MACdW,QAAQ;IACT,CAFQ,EAEN,EAFM,CAAT;EAGD,CARD,CAQE,OAAOE,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;;EACD,OAAOJ,IAAP;AACD,CAhBD;;GAAMF,c;;KAAAA,c;AAkBN,OAAO,MAAMS,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACxC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,MAAL;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYZ,KAAK,EAAE;MAAnB,CAAP;;IACF,KAAK,OAAL;MACE,OAAO,EAAE,GAAGY,KAAL;QAAYZ,KAAK,EAAE;MAAnB,CAAP;;IACF;MACE,OAAOY,KAAP;EANJ;AAQD,CATM;AAUP,OAAO,MAAMG,aAAa,gBAAGrB,aAAa,EAAnC;AAIP,OAAO,MAAMsB,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/ClB,YAAY,CAACE,IAAb,GAAoBC,cAAc,EAAlC,CAD+C,CAG/C;;EAEA,MAAM,CAACU,KAAD,EAAQM,QAAR,IAAoBrB,UAAU,CAACc,OAAD,EAAUZ,YAAV,CAApC;EAEA,MAAMoB,cAAc,GAAGvB,OAAO,CAC5B,OAAO;IACLgB,KADK;IAELM;EAFK,CAAP,CAD4B,EAK5B,CAACN,KAAD,CAL4B,CAA9B;EAOA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEO;IAAF,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAnBM;;IAAMD,e;;MAAAA,e"},"metadata":{},"sourceType":"module"}